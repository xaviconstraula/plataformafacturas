generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum para tipos de proveedores
enum ProviderType {
  MATERIAL_SUPPLIER // Proveedor de suministro de materiales
  MACHINERY_RENTAL // Proveedor de alquiler de maquinaria
}

// Enum for alert status
enum AlertStatus {
  PENDING
  APPROVED
  REJECTED
}

// Modelo para Proveedores
model Provider {
  id         String             @id @default(cuid())
  name       String
  type       ProviderType
  cif        String             @unique // Número de Identificación Fiscal
  email      String?
  phone      String?
  address    String?
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  invoices   Invoice[]
  materials  MaterialProvider[]
  PriceAlert PriceAlert[]

  @@index([type])
}

// Modelo para Facturas
model Invoice {
  id          String        @id @default(cuid())
  invoiceCode String // Código de factura (único por proveedor)
  providerId  String
  provider    Provider      @relation(fields: [providerId], references: [id], onDelete: Cascade)
  issueDate   DateTime
  totalAmount Decimal       @db.Decimal(10, 2)
  pdfUrl      String? // URL al archivo PDF almacenado
  status      String        @default("PENDING") // PENDING, PROCESSED, APPROVED, etc.
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  items       InvoiceItem[]
  alerts      PriceAlert[]

  @@unique([invoiceCode, providerId]) // Código único por proveedor
  @@index([providerId])
  @@index([issueDate])
  @@index([invoiceCode])
}

// Modelo para Materiales
model Material {
  id          String   @id @default(cuid())
  code        String   @unique // Código único del material
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Nueva funcionalidad para agrupación
  productGroup   ProductGroup? @relation(fields: [productGroupId], references: [id])
  productGroupId String?

  // Campos adicionales para mejor análisis
  category String? // Categoría del material
  unit     String? // Unidad de medida
  isActive Boolean @default(true) // Para productos descontinuados

  // Campos para identificación mejorada de productos
  referenceCode    String? // Código de referencia extraído del PDF
  alternativeCodes String? // Códigos alternativos separados por comas

  providers    MaterialProvider[]
  invoiceItems InvoiceItem[]
  PriceAlert   PriceAlert[]

  @@index([code])
  @@index([category])
  @@index([productGroupId])
  @@index([isActive])
  @@index([referenceCode])
}

// Modelo para Items de Factura
model InvoiceItem {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  invoice    Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  invoiceId  String
  material   Material @relation(fields: [materialId], references: [id])
  materialId String
  quantity   Decimal  @db.Decimal(10, 2)
  unitPrice  Decimal  @db.Decimal(10, 2)
  totalPrice Decimal  @db.Decimal(10, 2)
  itemDate   DateTime // Date specific to this item, may differ from invoice date

  // Nueva funcionalidad: OT/CECO
  workOrder String? // OT (Orden de Trabajo) o CECO (Centro de Coste)

  // Campos adicionales para mejor análisis
  description String? // Descripción específica del ítem en la factura
  lineNumber  Int? // Número de línea en la factura original

  @@index([invoiceId])
  @@index([materialId])
  @@index([workOrder]) // Índice para filtrar por OT/CECO
  @@index([itemDate])
}

// Tabla de relación entre Materiales y Proveedores
model MaterialProvider {
  id            String    @id @default(cuid())
  materialId    String
  material      Material  @relation(fields: [materialId], references: [id], onDelete: Cascade)
  providerId    String
  provider      Provider  @relation(fields: [providerId], references: [id], onDelete: Cascade)
  lastPrice     Decimal   @db.Decimal(10, 2)
  lastPriceDate DateTime? // issueDate of the invoice that set this lastPrice
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@unique([materialId, providerId])
  @@index([materialId])
  @@index([providerId])
  @@index([lastPriceDate]) // Index for querying by date
}

// Modelo para Alertas de Precios
model PriceAlert {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  material      Material @relation(fields: [materialId], references: [id], onDelete: Cascade)
  materialId    String
  provider      Provider @relation(fields: [providerId], references: [id], onDelete: Cascade)
  providerId    String
  oldPrice      Decimal  @db.Decimal(10, 2)
  newPrice      Decimal  @db.Decimal(10, 2)
  percentage    Decimal  @db.Decimal(10, 2)
  status        String   @default("PENDING") // PENDING, REVIEWED, DISMISSED
  effectiveDate DateTime // Date when the price change became effective
  invoice       Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  invoiceId     String

  @@unique([materialId, providerId, effectiveDate]) // Constraint único para prevenir alertas duplicadas en la misma fecha
  @@index([materialId])
  @@index([providerId])
  @@index([invoiceId])
  @@index([materialId, providerId, effectiveDate]) // Índice compuesto para evitar duplicados
}

// Modelo para Usuarios
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

// Nuevo modelo para agrupación de productos similares
model ProductGroup {
  id               String     @id @default(cuid())
  standardizedName String     @unique // Nombre estandarizado del grupo
  description      String?
  category         String? // Categoría del producto
  unit             String? // Unidad de medida estándar
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  materials        Material[] // Materiales que pertenecen a este grupo

  @@index([category])
  @@index([standardizedName])
}
